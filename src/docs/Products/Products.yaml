openapi: 3.0.0
info:
  title: Products API
  description: API documentation for product management.
  version: 1.0.0
servers:
  - url: http://localhost:8080/apidocs/
    description: Local server
paths:
  /products:
    get:
      summary: Get all products
      responses:
        '200':
          description: List of all products
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                          description: Product ID
                        title:
                          type: string
                          description: Product title
                        price:
                          type: number
                          format: float
                          description: Product price
                        stock:
                          type: integer
                          description: Product stock
                        thumbnail:
                          type: string
                          description: URL of the product thumbnail
    post:
      summary: Add a new product
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                price:
                  type: number
                  format: float
                stock:
                  type: integer
                thumbnail:
                  type: array
                  items:
                    type: string
                  description: URLs of product thumbnails
      responses:
        '200':
          description: Product added successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: Product ID
        '400':
          description: Error adding product

  /products/{pid}:
    get:
      summary: Get a product by ID
      parameters:
        - name: pid
          in: path
          required: true
          description: Product ID
          schema:
            type: string
      responses:
        '200':
          description: Product details
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  payload:
                    type: object
                    properties:
                      _id:
                        type: string
                        description: Product ID
                      title:
                        type: string
                        description: Product title
                      price:
                        type: number
                        format: float
                        description: Product price
                      stock:
                        type: integer
                        description: Product stock
                      thumbnail:
                        type: string
                        description: URL of the product thumbnail
        '400':
          description: Error retrieving product

    put:
      summary: Update a product by ID
      parameters:
        - name: pid
          in: path
          required: true
          description: Product ID
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                title:
                  type: string
                price:
                  type: number
                  format: float
                stock:
                  type: integer
                thumbnail:
                  type: array
                  items:
                    type: string
                  description: Updated URLs of product thumbnails
      responses:
        '200':
          description: Product updated successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  message:
                    type: string
                    description: Success message
        '400':
          description: Error updating product

    delete:
      summary: Delete a product by ID
      parameters:
        - name: pid
          in: path
          required: true
          description: Product ID
          schema:
            type: string
      responses:
        '200':
          description: Product deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  message:
                    type: string
                    description: Success message
        '400':
          description: Error deleting product

  /products/{pid}/email:
    delete:
      summary: Send an email notification when a product is deleted
      parameters:
        - name: pid
          in: path
          required: true
          description: Product ID
          schema:
            type: string
      responses:
        '200':
          description: Email sent successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    description: Status of the request
                  success:
                    type: string
                    description: Success message
        '400':
          description: Error sending email