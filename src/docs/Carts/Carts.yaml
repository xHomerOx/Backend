openapi: 3.0.0
info:
  title: Cart API
  description: API for managing carts and cart-related operations
  version: 1.0.0

paths:
  /api/carts:
    get:
      summary: Get all carts
      description: Retrieves a list of all carts.
      responses:
        '200':
          description: A list of carts.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Cart'
    
    post:
      summary: Create a new cart
      description: Creates a new cart.
      responses:
        '200':
          description: Cart created successfully.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cart'

  /api/carts/{cid}:
    get:
      summary: Get products from a specific cart
      description: Retrieves products from a specific cart by its ID.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: The ID of the cart to retrieve products from.
      responses:
        '200':
          description: Products retrieved successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: array

    
    delete:
      summary: Delete all products from a cart
      description: Deletes all products from a specific cart.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: The ID of the cart to delete all products from.
      responses:
        '200':
          description: All products deleted from cart successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: object
                    properties:
                      cartId:
                        type: string

    put:
      summary: Update product quantity in a cart
      description: Updates the quantity of a product in a specific cart.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: The ID of the cart to update the product quantity in.
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: The ID of the product to update in the cart.
        - in: body
          name: body
          required: true
          description: Object containing the new quantity of the product.
          schema:
            type: object
            properties:
              quantity:
                type: integer
                minimum: 1
                description: The new quantity of the product in the cart.
      responses:
        '200':
          description: Product quantity updated in cart successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: object
                    properties:
                      cartId:
                        type: string
                      productId:
                        type: string
                      quantity:
                        type: integer

  /api/carts/{cid}/products/{pid}:
    post:
      summary: Add a product to a cart
      description: Adds a product to a specific cart.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: The ID of the cart to add the product to.
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: The ID of the product to add to the cart.
      responses:
        '200':
          description: Product added to cart successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: object
                    properties:
                      cartId:
                        type: string
                      productId:
                        type: string
    
    delete:
      summary: Delete a product from a cart
      description: Deletes a product from a specific cart.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: The ID of the cart to delete the product from.
        - in: path
          name: pid
          required: true
          schema:
            type: string
          description: The ID of the product to delete from the cart.
      responses:
        '200':
          description: Product deleted from cart successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: object
                    properties:
                      cartId:
                        type: string

  /api/carts/{cid}/purchase:
    post:
      summary: Purchase a cart
      description: Initiates the purchase process for a specific cart.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: The ID of the cart to purchase.
      responses:
        '200':
          description: Cart purchase initiated successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                  payload:
                    type: string
                    description: The ID of the ticket generated for the purchase.

    get:
      summary: Generate ticket for a cart purchase
      description: Generates a ticket for a specific cart purchase.
      parameters:
        - in: path
          name: cid
          required: true
          schema:
            type: string
          description: The ID of the cart to generate a ticket for.
      responses:
        '200':
          description: Ticket generated successfully.
          content:
            text/html:
              schema:
                type: string
                example: HTML content of the ticket view.

components:
  schemas:
    Cart:
      type: object
      properties:
        _id:
          type: string
          description: The unique identifier of the cart.
        products:
          type: array